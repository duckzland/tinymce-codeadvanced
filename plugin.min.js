tinymce.PluginManager.add("codeadvanced", function (a, e) {
    function b() {

        var  g = a.dom, d, c;

        if (!d) {
            d = g.uniqueId();
        }
        c = g.create("link", {
            id: d,
            rel: "stylesheet",
            href: e + "/css/codeadvanced.css"
        });

        document.getElementsByTagName("head")[0].appendChild(c);

        if (hasClass(a.editorContainer, 'mce-codeadvanced-hide')) {
            removeClass(a.editorContainer, 'mce-codeadvanced-hide');
            removeClass(a.targetElm, 'mce-codeadvanced-show');
            // Refresh the editor
            a.setContent(a.targetElm.value);
        }
        else {
            addClass(a.editorContainer, 'mce-codeadvanced-hide');
            addClass(a.targetElm, 'mce-codeadvanced-show');
            // Refresh the textarea
            a.targetElm.value = a.getContent({format: 'raw'});
        }

        function hasClass(el, className) {
            if (el.classList)
                return el.classList.contains(className)
            else
                return !!el.className.match(new RegExp('(\\s|^)' + className + '(\\s|$)'))
        }

        function addClass(el, className) {
            if (el.classList)
                el.classList.add(className)
            else if (!hasClass(el, className)) el.className += " " + className
        }

        function removeClass(el, className) {
            if (el.classList)
                el.classList.remove(className)
            else if (hasClass(el, className)) {
                var reg = new RegExp('(\\s|^)' + className + '(\\s|$)')
                el.className=el.className.replace(reg, ' ')
            }
        }

    }

    a.addCommand("mceCodeEditor", b), a.addButton("codeadvanced", {
        icon: "code",
        tooltip: "Edit Source",
        onclick: b
    }), a.addMenuItem("code", {icon: "code", text: "Edit Source", context: "tools", onclick: b})
});